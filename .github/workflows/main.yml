# This is a basic workflow to help you get started with Actions

name: Build and deploy the library

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up version 17 of the JDK
      - name: Setup jdk-17
        uses: actions/setup-java@main
        with:
          java-version: 17
          distribution: 'adopt'

      # Builds the project
      - name: compile and package the code
        run: mvn -B -DskipTests clean package

      # Get the project version number from the POM
      - name: get project version number
        run: echo  "LIBRARY_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_ENV"

      # Saves the jar
      - name: save the jar as a github artifact
        uses: actions/upload-artifact@v3
        with:
          name: runnable-jar-$LIBRARY_VERSION
          path: target/library-*.jar

      # Deploy the jar to the production server (but don't install it)
      - name: send jar to themullers.org for deployment
        uses: appleboy/scp-action@master
        with:
          host: themullers.org
          username: github
          password: ${{ secrets.DEPLOY_PW }}
          source: target/*.jar
          target: ./
